{"version":3,"sources":["../node_modules/pizzicato/distr/Pizzicato.min.js","sounds.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../src","sourcesContent":["!function(e){\"use strict\";function t(e,t){this.options={},e=e||this.options;var i={frequency:350,peak:1};this.inputNode=this.filterNode=s.context.createBiquadFilter(),this.filterNode.type=t,this.outputNode=o.context.createGain(),this.filterNode.connect(this.outputNode);for(var n in i)this[n]=e[n],this[n]=void 0===this[n]||null===this[n]?i[n]:this[n]}function i(){var e,t,i=s.context.sampleRate*this.time,n=o.context.createBuffer(2,i,s.context.sampleRate),a=n.getChannelData(0),r=n.getChannelData(1);for(t=0;i>t;t++)e=this.reverse?i-t:t,a[t]=(2*Math.random()-1)*Math.pow(1-e/i,this.decay),r[t]=(2*Math.random()-1)*Math.pow(1-e/i,this.decay);this.reverbNode.buffer&&(this.inputNode.disconnect(this.reverbNode),this.reverbNode.disconnect(this.wetGainNode),this.reverbNode=o.context.createConvolver(),this.inputNode.connect(this.reverbNode),this.reverbNode.connect(this.wetGainNode)),this.reverbNode.buffer=n}function n(e){for(var t=s.context.sampleRate,i=new Float32Array(t),n=Math.PI/180,o=0;t>o;o++){var a=2*o/t-1;i[o]=(3+e)*a*20*n/(Math.PI+e*Math.abs(a))}return i}var o={},s=o,a=\"object\"==typeof module&&module.exports,r=\"function\"==typeof define&&define.amd;a?module.exports=o:r?define([],o):e.Pizzicato=e.Pz=o;var c=e.AudioContext||e.webkitAudioContext;if(!c)return void console.error(\"No AudioContext found in this environment. Please ensure your window or global object contains a working AudioContext constructor function.\");o.context=new c;var h=o.context.createGain();h.connect(o.context.destination),o.Util={isString:function(e){return\"[object String]\"===toString.call(e)},isObject:function(e){return\"[object Object]\"===toString.call(e)},isFunction:function(e){return\"[object Function]\"===toString.call(e)},isNumber:function(e){return\"[object Number]\"===toString.call(e)&&e===+e},isArray:function(e){return\"[object Array]\"===toString.call(e)},isInRange:function(e,t,i){return s.Util.isNumber(e)&&s.Util.isNumber(t)&&s.Util.isNumber(i)?e>=t&&i>=e:!1},isBool:function(e){return\"boolean\"==typeof e},isOscillator:function(e){return e&&\"[object OscillatorNode]\"===e.toString()},isAudioBufferSourceNode:function(e){return e&&\"[object AudioBufferSourceNode]\"===e.toString()},isSound:function(e){return e instanceof s.Sound},isEffect:function(e){for(var t in o.Effects)if(e instanceof o.Effects[t])return!0;return!1},normalize:function(e,t,i){return s.Util.isNumber(e)&&s.Util.isNumber(t)&&s.Util.isNumber(i)?(i-t)*e/1+t:void 0},getDryLevel:function(e){return!s.Util.isNumber(e)||e>1||0>e?0:.5>=e?1:1-2*(e-.5)},getWetLevel:function(e){return!s.Util.isNumber(e)||e>1||0>e?0:e>=.5?1:1-2*(.5-e)}};var u=o.context.createGain(),d=Object.getPrototypeOf(Object.getPrototypeOf(u)),l=d.connect;d.connect=function(e){var t=s.Util.isEffect(e)?e.inputNode:e;return l.call(this,t),e},Object.defineProperty(o,\"volume\",{enumerable:!0,get:function(){return h.gain.value},set:function(e){s.Util.isInRange(e,0,1)&&h&&(h.gain.value=e)}}),Object.defineProperty(o,\"masterGainNode\",{enumerable:!1,get:function(){return h},set:function(e){console.error(\"Can't set the master gain node\")}}),o.Events={on:function(e,t,i){if(e&&t){this._events=this._events||{};var n=this._events[e]||(this._events[e]=[]);n.push({callback:t,context:i||this,handler:this})}},trigger:function(e){if(e){var t,i,n,o;if(this._events=this._events||{},t=this._events[e]||(this._events[e]=[])){for(i=Math.max(0,arguments.length-1),n=[],o=0;i>o;o++)n[o]=arguments[o+1];for(o=0;o<t.length;o++)t[o].callback.apply(t[o].context,n)}}},off:function(e){e?this._events[e]=void 0:this._events={}}},o.Sound=function(e,t){function i(e){var t=[\"wave\",\"file\",\"input\",\"script\",\"sound\"];if(e&&!d.isFunction(e)&&!d.isString(e)&&!d.isObject(e))return\"Description type not supported. Initialize a sound using an object, a function or a string.\";if(d.isObject(e)){if(!d.isString(e.source)||-1===t.indexOf(e.source))return\"Specified source not supported. Sources can be wave, file, input or script\";if(!(\"file\"!==e.source||e.options&&e.options.path))return\"A path is needed for sounds with a file source\";if(!(\"script\"!==e.source||e.options&&e.options.audioFunction))return\"An audio function is needed for sounds with a script source\"}}function n(e,t){e=e||{},this.getRawSourceNode=function(){var t=this.sourceNode?this.sourceNode.frequency.value:e.frequency,i=o.context.createOscillator();return i.type=e.type||\"sine\",i.frequency.value=t||440,i},this.sourceNode=this.getRawSourceNode(),this.sourceNode.gainSuccessor=s.context.createGain(),this.sourceNode.connect(this.sourceNode.gainSuccessor),d.isFunction(t)&&t()}function a(e,t){e=d.isArray(e)?e:[e];var i=new XMLHttpRequest;i.open(\"GET\",e[0],!0),i.responseType=\"arraybuffer\",i.onload=function(i){o.context.decodeAudioData(i.target.response,function(e){u.getRawSourceNode=function(){var t=o.context.createBufferSource();return t.loop=this.loop,t.buffer=e,t},d.isFunction(t)&&t()}.bind(u),function(i){return console.error(\"Error decoding audio file \"+e[0]),e.length>1?(e.shift(),void a(e,t)):(i=i||new Error(\"Error decoding audio file \"+e[0]),void(d.isFunction(t)&&t(i)))}.bind(u))},i.onreadystatechange=function(t){4===i.readyState&&200!==i.status&&console.error(\"Error while fetching \"+e[0]+\". \"+i.statusText)},i.send()}function r(e,t){if(navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,!navigator.getUserMedia&&!navigator.mediaDevices.getUserMedia)return void console.error(\"Your browser does not support getUserMedia\");var i=function(e){u.getRawSourceNode=function(){return o.context.createMediaStreamSource(e)},d.isFunction(t)&&t()}.bind(u),n=function(e){d.isFunction(t)&&t(e)};navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!0}).then(i)[\"catch\"](n):navigator.getUserMedia({audio:!0},i,n)}function c(e,t){var i=d.isFunction(e)?e:e.audioFunction,n=d.isObject(e)&&e.bufferSize?e.bufferSize:null;if(!n)try{o.context.createScriptProcessor()}catch(s){n=2048}this.getRawSourceNode=function(){var e=o.context.createScriptProcessor(n,1,1);return e.onaudioprocess=i,e}}function h(e,t){this.getRawSourceNode=e.sound.getRawSourceNode,e.sound.sourceNode&&s.Util.isOscillator(e.sound.sourceNode)&&(this.sourceNode=this.getRawSourceNode(),this.frequency=e.sound.frequency)}var u=this,d=o.Util,l=i(e),f=d.isObject(e)&&d.isObject(e.options),p=.04,v=.04;if(l)throw console.error(l),new Error(\"Error initializing Pizzicato Sound: \"+l);this.detached=f&&e.options.detached,this.masterVolume=o.context.createGain(),this.fadeNode=o.context.createGain(),this.fadeNode.gain.value=0,this.detached||this.masterVolume.connect(o.masterGainNode),this.lastTimePlayed=0,this.effects=[],this.effectConnectors=[],this.playing=this.paused=!1,this.loop=f&&e.options.loop,this.attack=f&&d.isNumber(e.options.attack)?e.options.attack:p,this.volume=f&&d.isNumber(e.options.volume)?e.options.volume:1,f&&d.isNumber(e.options.release)?this.release=e.options.release:f&&d.isNumber(e.options.sustain)?(console.warn(\"'sustain' is deprecated. Use 'release' instead.\"),this.release=e.options.sustain):this.release=v,e?d.isString(e)?a.bind(this)(e,t):d.isFunction(e)?c.bind(this)(e,t):\"file\"===e.source?a.bind(this)(e.options.path,t):\"wave\"===e.source?n.bind(this)(e.options,t):\"input\"===e.source?r.bind(this)(e,t):\"script\"===e.source?c.bind(this)(e.options,t):\"sound\"===e.source&&h.bind(this)(e.options,t):n.bind(this)({},t)},o.Sound.prototype=Object.create(o.Events,{play:{enumerable:!0,value:function(e,t){this.playing||(s.Util.isNumber(t)||(t=this.offsetTime||0),s.Util.isNumber(e)||(e=0),this.playing=!0,this.paused=!1,this.sourceNode=this.getSourceNode(),this.applyAttack(),s.Util.isFunction(this.sourceNode.start)&&(this.lastTimePlayed=o.context.currentTime-t,this.sourceNode.start(s.context.currentTime+e,t)),this.trigger(\"play\"))}},stop:{enumerable:!0,value:function(){(this.paused||this.playing)&&(this.paused=this.playing=!1,this.stopWithRelease(),this.offsetTime=0,this.trigger(\"stop\"))}},pause:{enumerable:!0,value:function(){if(!this.paused&&this.playing){this.paused=!0,this.playing=!1,this.stopWithRelease();var e=s.context.currentTime-this.lastTimePlayed;this.sourceNode.buffer?this.offsetTime=e%(this.sourceNode.buffer.length/s.context.sampleRate):this.offsetTime=e,this.trigger(\"pause\")}}},clone:{enumerable:!0,value:function(){for(var e=new o.Sound({source:\"sound\",options:{loop:this.loop,attack:this.attack,release:this.release,volume:this.volume,sound:this}}),t=0;t<this.effects.length;t++)e.addEffect(this.effects[t]);return e}},onEnded:{enumerable:!0,value:function(e){return function(){this.sourceNode&&this.sourceNode!==e||(this.playing&&this.stop(),this.paused||this.trigger(\"end\"))}}},addEffect:{enumerable:!0,value:function(e){if(!s.Util.isEffect(e))return console.error(\"The object provided is not a Pizzicato effect.\"),this;this.effects.push(e);var t=this.effectConnectors.length>0?this.effectConnectors[this.effectConnectors.length-1]:this.fadeNode;t.disconnect(),t.connect(e);var i=s.context.createGain();return this.effectConnectors.push(i),e.connect(i),i.connect(this.masterVolume),this}},removeEffect:{enumerable:!0,value:function(e){var t=this.effects.indexOf(e);if(-1===t)return console.warn(\"Cannot remove effect that is not applied to this sound.\"),this;var i=this.playing;i&&this.pause();var n=0===t?this.fadeNode:this.effectConnectors[t-1];n.disconnect();var o=this.effectConnectors[t];o.disconnect(),e.disconnect(o),this.effectConnectors.splice(t,1),this.effects.splice(t,1);var s;return s=t>this.effects.length-1||0===this.effects.length?this.masterVolume:this.effects[t],n.connect(s),i&&this.play(),this}},connect:{enumerable:!0,value:function(e){return this.masterVolume.connect(e),this}},disconnect:{enumerable:!0,value:function(e){return this.masterVolume.disconnect(e),this}},connectEffects:{enumerable:!0,value:function(){for(var e=[],t=0;t<this.effects.length;t++){var i=t===this.effects.length-1,n=i?this.masterVolume:this.effects[t+1].inputNode;e[t]=s.context.createGain(),this.effects[t].outputNode.disconnect(this.effectConnectors[t]),this.effects[t].outputNode.connect(n)}}},volume:{enumerable:!0,get:function(){return this.masterVolume?this.masterVolume.gain.value:void 0},set:function(e){s.Util.isInRange(e,0,1)&&this.masterVolume&&(this.masterVolume.gain.value=e)}},frequency:{enumerable:!0,get:function(){return this.sourceNode&&s.Util.isOscillator(this.sourceNode)?this.sourceNode.frequency.value:null},set:function(e){this.sourceNode&&s.Util.isOscillator(this.sourceNode)&&(this.sourceNode.frequency.value=e)}},sustain:{enumerable:!0,get:function(){return console.warn(\"'sustain' is deprecated. Use 'release' instead.\"),this.release},set:function(e){console.warn(\"'sustain' is deprecated. Use 'release' instead.\"),s.Util.isInRange(e,0,10)&&(this.release=e)}},getSourceNode:{enumerable:!0,value:function(){if(this.sourceNode){var e=this.sourceNode;e.gainSuccessor.gain.setValueAtTime(e.gainSuccessor.gain.value,s.context.currentTime),e.gainSuccessor.gain.linearRampToValueAtTime(1e-4,s.context.currentTime+.2),setTimeout(function(){e.disconnect(),e.gainSuccessor.disconnect()},200)}var t=this.getRawSourceNode();return t.gainSuccessor=s.context.createGain(),t.connect(t.gainSuccessor),t.gainSuccessor.connect(this.fadeNode),this.fadeNode.connect(this.getInputNode()),s.Util.isAudioBufferSourceNode(t)&&(t.onended=this.onEnded(t).bind(this)),t}},getInputNode:{enumerable:!0,value:function(){return this.effects.length>0?this.effects[0].inputNode:this.masterVolume}},applyAttack:{enumerable:!1,value:function(){this.fadeNode.gain.value;if(this.fadeNode.gain.cancelScheduledValues(s.context.currentTime),!this.attack)return void this.fadeNode.gain.setTargetAtTime(1,s.context.currentTime,.001);var e=navigator.userAgent.toLowerCase().indexOf(\"firefox\")>-1,t=this.attack;e||(t=(1-this.fadeNode.gain.value)*this.attack),this.fadeNode.gain.setTargetAtTime(1,s.context.currentTime,2*t)}},stopWithRelease:{enumerable:!1,value:function(e){var t=this.sourceNode,i=function(){return s.Util.isFunction(t.stop)?t.stop(0):t.disconnect()};this.fadeNode.gain.value;if(this.fadeNode.gain.cancelScheduledValues(s.context.currentTime),!this.release)return this.fadeNode.gain.setTargetAtTime(0,s.context.currentTime,.001),void i();var n=navigator.userAgent.toLowerCase().indexOf(\"firefox\")>-1,o=this.release;n||(o=this.fadeNode.gain.value*this.release),this.fadeNode.gain.setTargetAtTime(1e-5,s.context.currentTime,o/5),window.setTimeout(function(){i()},1e3*o)}}}),o.Group=function(e){e=e||[],this.mergeGainNode=s.context.createGain(),this.masterVolume=s.context.createGain(),this.sounds=[],this.effects=[],this.effectConnectors=[],this.mergeGainNode.connect(this.masterVolume),this.masterVolume.connect(s.masterGainNode);for(var t=0;t<e.length;t++)this.addSound(e[t])},o.Group.prototype=Object.create(s.Events,{connect:{enumerable:!0,value:function(e){return this.masterVolume.connect(e),this}},disconnect:{enumerable:!0,value:function(e){return this.masterVolume.disconnect(e),this}},addSound:{enumerable:!0,value:function(e){return s.Util.isSound(e)?this.sounds.indexOf(e)>-1?void console.warn(\"The Pizzicato.Sound object was already added to this group\"):e.detached?void console.warn(\"Groups do not support detached sounds. You can manually create an audio graph to group detached sounds together.\"):(e.disconnect(s.masterGainNode),e.connect(this.mergeGainNode),void this.sounds.push(e)):void console.error(\"You can only add Pizzicato.Sound objects\")}},removeSound:{enumerable:!0,value:function(e){var t=this.sounds.indexOf(e);return-1===t?void console.warn(\"Cannot remove a sound that is not part of this group.\"):(e.disconnect(this.mergeGainNode),e.connect(s.masterGainNode),void this.sounds.splice(t,1))}},volume:{enumerable:!0,get:function(){return this.masterVolume?this.masterVolume.gain.value:void 0},set:function(e){s.Util.isInRange(e,0,1)&&(this.masterVolume.gain.value=e)}},play:{enumerable:!0,value:function(){for(var e=0;e<this.sounds.length;e++)this.sounds[e].play();this.trigger(\"play\")}},stop:{enumerable:!0,value:function(){for(var e=0;e<this.sounds.length;e++)this.sounds[e].stop();this.trigger(\"stop\")}},pause:{enumerable:!0,value:function(){for(var e=0;e<this.sounds.length;e++)this.sounds[e].pause();this.trigger(\"pause\")}},addEffect:{enumerable:!0,value:function(e){if(!s.Util.isEffect(e))return console.error(\"The object provided is not a Pizzicato effect.\"),this;this.effects.push(e);var t=this.effectConnectors.length>0?this.effectConnectors[this.effectConnectors.length-1]:this.mergeGainNode;t.disconnect(),t.connect(e);var i=s.context.createGain();return this.effectConnectors.push(i),e.connect(i),i.connect(this.masterVolume),this}},removeEffect:{enumerable:!0,value:function(e){var t=this.effects.indexOf(e);if(-1===t)return console.warn(\"Cannot remove effect that is not applied to this group.\"),this;var i=0===t?this.mergeGainNode:this.effectConnectors[t-1];i.disconnect();var n=this.effectConnectors[t];n.disconnect(),e.disconnect(n),this.effectConnectors.splice(t,1),this.effects.splice(t,1);var o;return o=t>this.effects.length-1||0===this.effects.length?this.masterVolume:this.effects[t],i.connect(o),this}}}),o.Effects={};var f=Object.create(null,{connect:{enumerable:!0,value:function(e){return this.outputNode.connect(e),this}},disconnect:{enumerable:!0,value:function(e){return this.outputNode.disconnect(e),this}}});o.Effects.Delay=function(e){this.options={},e=e||this.options;var t={feedback:.5,time:.3,mix:.5};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.feedbackGainNode=o.context.createGain(),this.delayNode=o.context.createDelay(),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.delayNode.connect(this.feedbackGainNode),this.feedbackGainNode.connect(this.delayNode),this.inputNode.connect(this.delayNode),this.delayNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.Delay.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(e){s.Util.isInRange(e,0,180)&&(this.options.time=e,this.delayNode.delayTime.value=e)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.feedback=parseFloat(e,10),this.feedbackGainNode.gain.value=this.feedback)}}}),o.Effects.Compressor=function(e){this.options={},e=e||this.options;var t={threshold:-24,knee:30,attack:.003,release:.25,ratio:12};this.inputNode=this.compressorNode=o.context.createDynamicsCompressor(),this.outputNode=o.context.createGain(),this.compressorNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.Compressor.prototype=Object.create(f,{threshold:{enumerable:!0,get:function(){return this.compressorNode.threshold.value},set:function(e){o.Util.isInRange(e,-100,0)&&(this.compressorNode.threshold.value=e)}},knee:{enumerable:!0,get:function(){return this.compressorNode.knee.value},set:function(e){o.Util.isInRange(e,0,40)&&(this.compressorNode.knee.value=e)}},attack:{enumerable:!0,get:function(){return this.compressorNode.attack.value},set:function(e){o.Util.isInRange(e,0,1)&&(this.compressorNode.attack.value=e)}},release:{enumerable:!0,get:function(){return this.compressorNode.release.value},set:function(e){o.Util.isInRange(e,0,1)&&(this.compressorNode.release.value=e)}},ratio:{enumerable:!0,get:function(){return this.compressorNode.ratio.value},set:function(e){o.Util.isInRange(e,1,20)&&(this.compressorNode.ratio.value=e)}},getCurrentGainReduction:function(){return this.compressorNode.reduction}}),o.Effects.LowPassFilter=function(e){t.call(this,e,\"lowpass\")},o.Effects.HighPassFilter=function(e){t.call(this,e,\"highpass\")};var p=Object.create(f,{frequency:{enumerable:!0,get:function(){return this.filterNode.frequency.value},set:function(e){o.Util.isInRange(e,10,22050)&&(this.filterNode.frequency.value=e)}},peak:{enumerable:!0,get:function(){return this.filterNode.Q.value},set:function(e){o.Util.isInRange(e,1e-4,1e3)&&(this.filterNode.Q.value=e)}}});o.Effects.LowPassFilter.prototype=p,o.Effects.HighPassFilter.prototype=p,o.Effects.Distortion=function(e){this.options={},e=e||this.options;var t={gain:.5};this.waveShaperNode=o.context.createWaveShaper(),this.inputNode=this.outputNode=this.waveShaperNode;for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.Distortion.prototype=Object.create(f,{gain:{enumerable:!0,get:function(){return this.options.gain},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.gain=e,this.adjustGain())}},adjustGain:{writable:!1,configurable:!1,enumerable:!1,value:function(){for(var e,t=s.Util.isNumber(this.options.gain)?parseInt(100*this.options.gain,10):50,i=44100,n=new Float32Array(i),o=Math.PI/180,a=0;i>a;++a)e=2*a/i-1,n[a]=(3+t)*e*20*o/(Math.PI+t*Math.abs(e));this.waveShaperNode.curve=n}}}),o.Effects.Flanger=function(e){this.options={},e=e||this.options;var t={time:.45,speed:.2,depth:.1,feedback:.1,mix:.5};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.inputFeedbackNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.delayNode=o.context.createDelay(),this.oscillatorNode=o.context.createOscillator(),this.gainNode=o.context.createGain(),this.feedbackNode=o.context.createGain(),this.oscillatorNode.type=\"sine\",this.inputNode.connect(this.inputFeedbackNode),this.inputNode.connect(this.dryGainNode),this.inputFeedbackNode.connect(this.delayNode),this.inputFeedbackNode.connect(this.wetGainNode),this.delayNode.connect(this.wetGainNode),this.delayNode.connect(this.feedbackNode),this.feedbackNode.connect(this.inputFeedbackNode),this.oscillatorNode.connect(this.gainNode),this.gainNode.connect(this.delayNode.delayTime),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode),this.oscillatorNode.start(0);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.Flanger.prototype=Object.create(f,{time:{enumberable:!0,get:function(){return this.options.time},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.time=e,this.delayNode.delayTime.value=s.Util.normalize(e,.001,.02))}},speed:{enumberable:!0,get:function(){return this.options.speed},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.speed=e,this.oscillatorNode.frequency.value=s.Util.normalize(e,.5,5))}},depth:{enumberable:!0,get:function(){return this.options.depth},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.depth=e,this.gainNode.gain.value=s.Util.normalize(e,5e-4,.005))}},feedback:{enumberable:!0,get:function(){return this.options.feedback},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.feedback=e,this.feedbackNode.gain.value=s.Util.normalize(e,0,.8))}},mix:{enumberable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}}}),o.Effects.StereoPanner=function(e){this.options={},e=e||this.options;var t={pan:0};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),o.context.createStereoPanner?(this.pannerNode=o.context.createStereoPanner(),this.inputNode.connect(this.pannerNode),this.pannerNode.connect(this.outputNode)):o.context.createPanner?(console.warn(\"Your browser does not support the StereoPannerNode. Will use PannerNode instead.\"),this.pannerNode=o.context.createPanner(),this.pannerNode.type=\"equalpower\",this.inputNode.connect(this.pannerNode),this.pannerNode.connect(this.outputNode)):(console.warn(\"Your browser does not support the Panner effect.\"),this.inputNode.connect(this.outputNode));for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.StereoPanner.prototype=Object.create(f,{pan:{enumerable:!0,get:function(){return this.options.pan},set:function(e){if(s.Util.isInRange(e,-1,1)&&(this.options.pan=e,this.pannerNode)){var t=this.pannerNode.toString().indexOf(\"StereoPannerNode\")>-1;t?this.pannerNode.pan.value=e:this.pannerNode.setPosition(e,0,1-Math.abs(e))}}}}),o.Effects.Convolver=function(e,t){this.options={},e=e||this.options;var i=this,n=new XMLHttpRequest,a={mix:.5};this.callback=t,this.inputNode=o.context.createGain(),this.convolverNode=o.context.createConvolver(),this.outputNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.inputNode.connect(this.convolverNode),this.convolverNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode);for(var r in a)this[r]=e[r],this[r]=void 0===this[r]||null===this[r]?a[r]:this[r];return e.impulse?(n.open(\"GET\",e.impulse,!0),n.responseType=\"arraybuffer\",n.onload=function(e){var t=e.target.response;o.context.decodeAudioData(t,function(e){i.convolverNode.buffer=e,i.callback&&s.Util.isFunction(i.callback)&&i.callback()},function(e){e=e||new Error(\"Error decoding impulse file\"),i.callback&&s.Util.isFunction(i.callback)&&i.callback(e)})},n.onreadystatechange=function(t){4===n.readyState&&200!==n.status&&console.error(\"Error while fetching \"+e.impulse+\". \"+n.statusText)},void n.send()):void console.error(\"No impulse file specified.\")},o.Effects.Convolver.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}}}),o.Effects.PingPongDelay=function(e){this.options={},e=e||this.options;var t={feedback:.5,time:.3,mix:.5};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.delayNodeLeft=o.context.createDelay(),this.delayNodeRight=o.context.createDelay(),this.dryGainNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.feedbackGainNode=o.context.createGain(),this.channelMerger=o.context.createChannelMerger(2),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.delayNodeLeft.connect(this.channelMerger,0,0),this.delayNodeRight.connect(this.channelMerger,0,1),this.delayNodeLeft.connect(this.delayNodeRight),this.feedbackGainNode.connect(this.delayNodeLeft),this.delayNodeRight.connect(this.feedbackGainNode),this.inputNode.connect(this.feedbackGainNode),this.channelMerger.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.PingPongDelay.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(e){s.Util.isInRange(e,0,180)&&(this.options.time=e,this.delayNodeLeft.delayTime.value=e,this.delayNodeRight.delayTime.value=e)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.feedback=parseFloat(e,10),this.feedbackGainNode.gain.value=this.feedback)}}}),o.Effects.Reverb=function(e){this.options={},e=e||this.options;var t={mix:.5,time:.01,decay:.01,reverse:!1};this.inputNode=o.context.createGain(),this.reverbNode=o.context.createConvolver(),this.outputNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.inputNode.connect(this.reverbNode),this.reverbNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.wetGainNode.connect(this.outputNode);for(var n in t)this[n]=e[n],this[n]=void 0===this[n]||null===this[n]?t[n]:this[n];i.bind(this)()},o.Effects.Reverb.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(e){s.Util.isInRange(e,1e-4,10)&&(this.options.time=e,i.bind(this)())}},decay:{enumerable:!0,get:function(){return this.options.decay},set:function(e){s.Util.isInRange(e,1e-4,10)&&(this.options.decay=e,i.bind(this)())}},reverse:{enumerable:!0,get:function(){return this.options.reverse},set:function(e){s.Util.isBool(e)&&(this.options.reverse=e,i.bind(this)())}}}),o.Effects.Tremolo=function(e){this.options={},e=e||this.options;var t={speed:4,depth:1,mix:.8};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.tremoloGainNode=o.context.createGain(),this.tremoloGainNode.gain.value=0,this.lfoNode=o.context.createOscillator(),this.shaperNode=o.context.createWaveShaper(),this.shaperNode.curve=new Float32Array([0,1]),this.shaperNode.connect(this.tremoloGainNode.gain),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.lfoNode.connect(this.shaperNode),this.lfoNode.type=\"sine\",this.lfoNode.start(0),this.inputNode.connect(this.tremoloGainNode),this.tremoloGainNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.Tremolo.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},speed:{enumerable:!0,get:function(){return this.options.speed},set:function(e){s.Util.isInRange(e,0,20)&&(this.options.speed=e,this.lfoNode.frequency.value=e)}},depth:{enumerable:!0,get:function(){return this.options.depth},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.depth=e,this.shaperNode.curve=new Float32Array([1-e,1]))}}}),o.Effects.DubDelay=function(e){this.options={},e=e||this.options;var t={feedback:.6,time:.7,mix:.5,cutoff:700};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.feedbackGainNode=o.context.createGain(),this.delayNode=o.context.createDelay(),this.bqFilterNode=o.context.createBiquadFilter(),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.inputNode.connect(this.wetGainNode),this.inputNode.connect(this.feedbackGainNode),this.feedbackGainNode.connect(this.bqFilterNode),this.bqFilterNode.connect(this.delayNode),this.delayNode.connect(this.feedbackGainNode),this.delayNode.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]},o.Effects.DubDelay.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},time:{enumerable:!0,get:function(){return this.options.time},set:function(e){s.Util.isInRange(e,0,180)&&(this.options.time=e,this.delayNode.delayTime.value=e)}},feedback:{enumerable:!0,get:function(){return this.options.feedback},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.feedback=parseFloat(e,10),this.feedbackGainNode.gain.value=this.feedback)}},cutoff:{enumerable:!0,get:function(){return this.options.cutoff},set:function(e){s.Util.isInRange(e,0,4e3)&&(this.options.cutoff=e,this.bqFilterNode.frequency.value=this.cutoff)}}}),o.Effects.RingModulator=function(e){this.options={},e=e||this.options;var t={speed:30,distortion:1,mix:.5};this.inputNode=o.context.createGain(),this.outputNode=o.context.createGain(),this.dryGainNode=o.context.createGain(),this.wetGainNode=o.context.createGain(),this.vIn=o.context.createOscillator(),this.vIn.start(0),this.vInGain=o.context.createGain(),this.vInGain.gain.value=.5,this.vInInverter1=o.context.createGain(),this.vInInverter1.gain.value=-1,this.vInInverter2=o.context.createGain(),this.vInInverter2.gain.value=-1,this.vInDiode1=new v(o.context),this.vInDiode2=new v(o.context),this.vInInverter3=o.context.createGain(),this.vInInverter3.gain.value=-1,this.vcInverter1=o.context.createGain(),this.vcInverter1.gain.value=-1,this.vcDiode3=new v(o.context),this.vcDiode4=new v(o.context),this.outGain=o.context.createGain(),this.outGain.gain.value=3,this.compressor=o.context.createDynamicsCompressor(),this.compressor.threshold.value=-24,this.compressor.ratio.value=16,this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode),this.inputNode.connect(this.vcInverter1),this.inputNode.connect(this.vcDiode4.node),this.vcInverter1.connect(this.vcDiode3.node),this.vIn.connect(this.vInGain),this.vInGain.connect(this.vInInverter1),this.vInGain.connect(this.vcInverter1),this.vInGain.connect(this.vcDiode4.node),this.vInInverter1.connect(this.vInInverter2),this.vInInverter1.connect(this.vInDiode2.node),this.vInInverter2.connect(this.vInDiode1.node),this.vInDiode1.connect(this.vInInverter3),this.vInDiode2.connect(this.vInInverter3),this.vInInverter3.connect(this.compressor),this.vcDiode3.connect(this.compressor),this.vcDiode4.connect(this.compressor),this.compressor.connect(this.outGain),\nthis.outGain.connect(this.wetGainNode),this.wetGainNode.connect(this.outputNode);for(var i in t)this[i]=e[i],this[i]=void 0===this[i]||null===this[i]?t[i]:this[i]};var v=function(e){this.context=e,this.node=this.context.createWaveShaper(),this.vb=.2,this.vl=.4,this.h=1,this.setCurve()};return v.prototype.setDistortion=function(e){return this.h=e,this.setCurve()},v.prototype.setCurve=function(){var e,t,i,n,o,s,a,r;for(t=1024,o=new Float32Array(t),e=s=0,a=o.length;a>=0?a>s:s>a;e=a>=0?++s:--s)i=(e-t/2)/(t/2),i=Math.abs(i),n=i<=this.vb?0:this.vb<i&&i<=this.vl?this.h*(Math.pow(i-this.vb,2)/(2*this.vl-2*this.vb)):this.h*i-this.h*this.vl+this.h*(Math.pow(this.vl-this.vb,2)/(2*this.vl-2*this.vb)),o[e]=n;return r=this.node.curve=o},v.prototype.connect=function(e){return this.node.connect(e)},o.Effects.RingModulator.prototype=Object.create(f,{mix:{enumerable:!0,get:function(){return this.options.mix},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.mix=e,this.dryGainNode.gain.value=o.Util.getDryLevel(this.mix),this.wetGainNode.gain.value=o.Util.getWetLevel(this.mix))}},speed:{enumerable:!0,get:function(){return this.options.speed},set:function(e){s.Util.isInRange(e,0,2e3)&&(this.options.speed=e,this.vIn.frequency.value=e)}},distortion:{enumerable:!0,get:function(){return this.options.distortion},set:function(e){if(s.Util.isInRange(e,.2,50)){this.options.distortion=parseFloat(e,10);for(var t=[this.vInDiode1,this.vInDiode2,this.vcDiode3,this.vcDiode4],i=0,n=t.length;n>i;i++)t[i].setDistortion(e)}}}}),o.Effects.Quadrafuzz=function(e){this.options={},e=e||this.options;var t={lowGain:.6,midLowGain:.8,midHighGain:.5,highGain:.6};this.inputNode=s.context.createGain(),this.outputNode=s.context.createGain(),this.dryGainNode=s.context.createGain(),this.wetGainNode=s.context.createGain(),this.lowpassLeft=s.context.createBiquadFilter(),this.lowpassLeft.type=\"lowpass\",this.lowpassLeft.frequency.value=147,this.lowpassLeft.Q.value=.7071,this.bandpass1Left=s.context.createBiquadFilter(),this.bandpass1Left.type=\"bandpass\",this.bandpass1Left.frequency.value=587,this.bandpass1Left.Q.value=.7071,this.bandpass2Left=s.context.createBiquadFilter(),this.bandpass2Left.type=\"bandpass\",this.bandpass2Left.frequency.value=2490,this.bandpass2Left.Q.value=.7071,this.highpassLeft=s.context.createBiquadFilter(),this.highpassLeft.type=\"highpass\",this.highpassLeft.frequency.value=4980,this.highpassLeft.Q.value=.7071,this.overdrives=[];for(var i=0;4>i;i++)this.overdrives[i]=s.context.createWaveShaper(),this.overdrives[i].curve=n();this.inputNode.connect(this.wetGainNode),this.inputNode.connect(this.dryGainNode),this.dryGainNode.connect(this.outputNode);var o=[this.lowpassLeft,this.bandpass1Left,this.bandpass2Left,this.highpassLeft];for(i=0;i<o.length;i++)this.wetGainNode.connect(o[i]),o[i].connect(this.overdrives[i]),this.overdrives[i].connect(this.outputNode);for(var a in t)this[a]=e[a],this[a]=void 0===this[a]||null===this[a]?t[a]:this[a]},o.Effects.Quadrafuzz.prototype=Object.create(f,{lowGain:{enumerable:!0,get:function(){return this.options.lowGain},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.lowGain=e,this.overdrives[0].curve=n(s.Util.normalize(this.lowGain,0,150)))}},midLowGain:{enumerable:!0,get:function(){return this.options.midLowGain},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.midLowGain=e,this.overdrives[1].curve=n(s.Util.normalize(this.midLowGain,0,150)))}},midHighGain:{enumerable:!0,get:function(){return this.options.midHighGain},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.midHighGain=e,this.overdrives[2].curve=n(s.Util.normalize(this.midHighGain,0,150)))}},highGain:{enumerable:!0,get:function(){return this.options.highGain},set:function(e){s.Util.isInRange(e,0,1)&&(this.options.highGain=e,this.overdrives[3].curve=n(s.Util.normalize(this.highGain,0,150)))}}}),o}(\"undefined\"!=typeof window?window:global);","import Pizzicato from 'pizzicato';\n\nexport const getVolume = (): number => {\n    const volumeEl = document.getElementById('volume') as HTMLInputElement;\n\n    return parseFloat(volumeEl.value)\n}\n\nexport const generateSound = (index: number, type: string = 'triangle') => {\n  const factor = index === 0 ? 1 : index + 1;\n  const volume = getVolume();\n  \n  return new Pizzicato.Sound({\n    source: 'wave',\n    options: {\n      frequency: 261.626 * (factor / 4),\n      type,\n      volume,\n      attack: 0.1,\n      release: 0.1\n    },\n  });\n};\n","import { generateSound, getVolume } from \"./sounds\";\n\nlet gamepad_is_connected = false;\nconst getControlName = (names, index, extraPrefix) => {\n  return index < names.length\n    ? names[index]\n    : extraPrefix + (index - names.length + 1);\n};\n\nconst active = {};\nconst bank = {};\n\nconst STANDARD_BUTTONS = [\n  \"BUTTON_3\",\n  \"BUTTON_4\",\n  \"BUTTON_1\",\n  \"BUTTON_2\",\n  \"THROW\",\n  \"AMP\",\n  \"LEFT_BOTTOM_SHOULDER\",\n  \"RIGHT_BOTTOM_SHOULDER\",\n  \"SELECT_BACK\",\n  \"START_FORWARD\",\n  \"LEFT_STICK\",\n  \"RIGHT_STICK\",\n  \"DPAD_UP\",\n  \"DPAD_DOWN\",\n  \"DPAD_LEFT\",\n  \"DPAD_RIGHT\",\n  \"HOME\",\n];\n\nlet gapCountdown = -1;\nlet frame = 0;\nlet inputBuffer = [] as string[];\nconst checkInputs = (name: string) => {\n  inputBuffer.push(name);\n  let buffer = inputBuffer.join(\",\");\n  console.log(buffer);\n  if (buffer === \"DPAD_DOWN,DPAD_LEFT,BUTTON_1\") {\n    console.log(\"BOOM\");\n    const gapEl = document.getElementById(\"gap\") as HTMLInputElement;\n    const gap = parseInt(gapEl.value, 10);\n    console.log(gap);\n    if (gapEl && gap > 0) {\n      gapCountdown = gap;\n    }\n    inputBuffer = [];\n    playSound(\"BOOM\", 50);\n    setTimeout(() => stopSound(\"BOOM\"), 250);\n  }\n  if (name === \"SELECT_BACK\" || inputBuffer.length === 3) {\n    inputBuffer = [];\n  }\n};\n\nconst checkGap = () => {\n  if (gapCountdown >= 0) {\n    gapCountdown = -1;\n  }\n  if (gapCountdown === 0) {\n    playSound(\"GAP\", 70);\n    setTimeout(() => stopSound(\"GAP\"), 250);\n\n    console.log(\"GAP!\");\n  }\n};\n\nconst playSound = (name: string, index: number, type?: string) => {\n  if (frame % 15 === 0) {\n    stopSound(name);\n  }\n  bank[name] = bank[name] || generateSound(index, type);\n  bank[name].volume = getVolume();\n  bank[name].play();\n};\n\nconst stopSound = (name: string) => {\n  const sound = bank[name];\n  if (!sound) {\n    return;\n  }\n  //   if (frame % 4 === 0) {\n  checkInputs(name);\n  //   }\n  bank[name].stop();\n};\n\nconst handleAxis = (up: string, down: string) => (\n  axis: number,\n  value: number\n) => {\n  if (axis === 0) {\n    stopSound(up);\n    stopSound(down);\n  }\n  if (axis === -1) {\n    playSound(up, value, \"sine\");\n  }\n  if (axis === 1) {\n    playSound(down, value, \"sine\");\n  }\n};\n\nconst handleY = handleAxis(\"DPAD_UP\", \"DPAD_DOWN\");\nconst handleX = handleAxis(\"DPAD_LEFT\", \"DPAD_RIGHT\");\n\nconst handleButtonPress = () => {\n  for (const pad of navigator.getGamepads()) {\n    if (pad) {\n      pad.axes.forEach((axis, index) => {\n        const value = Math.abs(index + axis);\n        // left/right\n        if (index === 6) {\n          return handleX(axis, value);\n        }\n\n        // up/down\n        if (index === 7) {\n          handleY(axis, value);\n        }\n      });\n      pad.buttons.forEach((button, index) => {\n        const name = getControlName(STANDARD_BUTTONS, index, \"EXTRA_BUTTON_\");\n\n        if (button.value === 1) {\n          active[name] = true;\n          playSound(name, index);\n        }\n        if (active[name] && button.value !== 1) {\n          active[name] = false;\n          stopSound(name);\n        }\n      });\n    }\n  }\n};\n\nconst runAnimation = () => {\n  if (!gamepad_is_connected) {\n    return;\n  }\n\n  frame = frame === 60 ? 0 : frame + 1;\n  window.requestAnimationFrame(runAnimation);\n  handleButtonPress();\n  checkGap();\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(`Let's GO!`);\n\n  window.addEventListener(\"gamepadconnected\", (event) => {\n    console.log(\"Gamepad connected\");\n    gamepad_is_connected = true;\n\n    window.requestAnimationFrame(runAnimation);\n  });\n\n  window.addEventListener(\"gamepaddisconnected\", (event) => {\n    console.log(\"Gamepad disconnected:\");\n\n    gamepad_is_connected = false;\n  });\n});\n"]}